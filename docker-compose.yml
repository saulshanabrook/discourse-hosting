services:
  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  redis:
    image: redis/redis-stack:latest
    ports:
      - "8001:8001"
      - "6379:6379"
    environment:
        REDIS_ARGS: --requirepass password
    volumes:
      - ./data/redis:/data
  web:
    extends:
      file: base.docker-compose.yml
      service: discourse
    ports:
      - "80"
    depends_on:
      - db
      - redis
      - minio
  # Reverse proxy to differentiate based on domain, which server to use
  nginx:
    image: nginx:latest
    ports:
      - 80:80
    entrypoint:
      - bash
      - "-c"
      - >
        set -ex &&
        echo '
        events {

        }
        http {
          server {
              listen 80;
              server_name assets.${HOSTNAME:?err};
              location / {
                  proxy_set_header Host $$http_host;
                  proxy_pass http://minio;
              }
          }
          server {
              listen 80;
              server_name ${HOSTNAME:?err};
              location / {
                  proxy_set_header Host $$http_host;
                  proxy_pass http://web;
              }
          }
        }' > /etc/nginx/nginx.conf &&
        nginx -g 'daemon off;'
    depends_on:
      - web
      - minio
  init:
    extends:
      file: base.docker-compose.yml
      service: discourse
    command:
      - bash
      - "-c"
      - >
        set -ex &&
        bundle exec rake --trace
        db:migrate
        themes:update
        assets:precompile
        s3:upload_assets
        manifest:upload &&
        bundle exec rails r SiteSetting.notification_email=\'${EMAIL_ADDRESS:?err}\'
        bundle exec rails r SiteSetting.content_security_policy=false
    depends_on:
      - db
      - redis
      - minio
    profiles:
      - dont-start
  minio:
    image: minio/minio
    command: server --address :80 --console-address :9001 /data
    ports:
      - "80"
      - "9001:9001"
    volumes:
      - ./data/minio:/data
    environment:
      MINIO_DOMAIN: "${HOSTNAME:?err}"
    networks:
      default:
        aliases:
          - assets.${HOSTNAME:?err}
          # - backup.${HOSTNAME:?err}
  # Run command on start
  # https://github.com/minio/mc/issues/3144
  # Set bucket to allow downloads
  # https://github.com/rishabhnambiar/discourse-docs/blob/master/minio.md#step-4-setting-an-upload-bucket-policy-skip-if-not-using-minio-for-image-uploads
  mc:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add local http://minio minioadmin minioadmin;
      /usr/bin/mc mb --quiet local/assets/;
      /usr/bin/mc anonymous set download local/assets;
      "
    profiles:
      - dont-start

networks:
  default:
